// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: name_resolvers.sql

package queries

import (
	"context"
)

const SelectAllNameResolvers = `-- name: SelectAllNameResolvers :many
SELECT exchange, local_symbol, exchange_symbol, created_at, updated_at, deleted_at
FROM quant.name_resolvers
WHERE deleted_at IS NULL
`

func (q *Queries) SelectAllNameResolvers(ctx context.Context) ([]QuantNameResolver, error) {
	rows, err := q.db.Query(ctx, SelectAllNameResolvers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []QuantNameResolver
	for rows.Next() {
		var i QuantNameResolver
		if err := rows.Scan(
			&i.Exchange,
			&i.LocalSymbol,
			&i.ExchangeSymbol,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
